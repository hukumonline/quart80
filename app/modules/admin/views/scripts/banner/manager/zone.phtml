<script type="text/javascript"> 
setTimeout(function()
{
	dsZone = new Ext.data.Store({ 
		proxy: new Ext.data.HttpProxy({
			url: './services/banner/fetch-zone'	
		}),
		reader: new Ext.data.JsonReader({
			root: 'zone',
			totalProperty: 'totalCount',
			id: 'guid',
		}, [
				'title',  
				{name:'guid',mapping:'guid'},
		]),
		remoteSort: true
	});
	
    var xg = Ext.grid;
    var sm = new xg.CheckboxSelectionModel();
    var pg = new Ext.ux.grid.PagingRowNumberer({header:'No.',width:30});
    var cm = new xg.ColumnModel
   	([
   		sm,
   		pg,
		{header: "Zone ID", dataIndex: 'guid', width: 50},
	    {header: "Zone Name", dataIndex: 'title', width: 200},
   	]);
	
	// add a paging toolbar to the grid's footer
	var paging = new Ext.ux.PagingToolbar({
		pageSize: 25,
		store: dsZone,
		displayInfo: true,
		displayMsg: 'Displaying topics {0} - {1} of {2}',
		emptyMsg: "No data to display"
	});
	
	var gridZone = new xg.GridPanel({
		id:'zone-grid',
	    ds: dsZone,
	    cm: cm,
	    sm: sm,
	    bbar: paging,
	    tbar: [{
	    	text: 'Add zone',
	    	icon: './js/extjs/resources/images/default/silk/icons/page_white_copy.png',
	    	cls: 'x-btn-text-icon',
	    	tooltip: 'Click to add banner',
	    	handler: function(){
	    		ext_get("./admin/banner_manager/addzone",500,140,'addzone');
	    	}
	    },
	    {
	    	text: 'Edit zone',
	    	icon: './js/extjs/resources/images/default/silk/icons/lightbulb.png',
	    	cls: 'x-btn-text-icon',
	    	tooltip: 'Click to modify zone',
	    	handler: function(){
	    		var selectedKeys = gridZone.selModel.selections.keys;
	    		if (selectedKeys.length > 0)
	    		{
		    		ext_get("./admin/banner_manager/editzone/zid/"+selectedKeys,500,140,'editzone');
	    		}
	    		else
	    		{
	    			Ext.MessageBox.alert('Oops ...','Please select at least one item');
	    		}
	    	}
	    },
	    {
	    	text: 'Delete',
	    	icon: './js/extjs/resources/images/default/silk/icons/bin_empty.png',
	    	cls: 'x-btn-text-icon',
	    	tooltip: 'Click to delete selected rows',
	    	handler: function(){
	    		var selectedKeys = gridZone.selModel.selections.keys;
	    		if (selectedKeys.length > 0)
	    		{
	    			Ext.MessageBox.confirm('Confirm','Do you really want to delete selection?',deleteRecordBannerZone);
	    		}
	    		else
	    		{
	    			Ext.MessageBox.alert('Oops ...','Please select at least one item to delete');
	    		}
	    	}
        },
        {
	    	text: 'Refresh',
	    	icon: './js/extjs/resources/images/default/silk/icons/database_refresh.png',
	    	cls: 'x-btn-text-icon',
	    	tooltip: 'Click to Refresh the table',
	    	handler: function(){ dsZone.reload(); }
        }
	    ],
	    selModel: new xg.RowSelectionModel({singleSelect:false}),
	    enableColLock:false,
	    stripeRows: true,
	    loadMask: true,
	    layout:'fit',
	    forceFit:'fit'
	});

  	Ext.getCmp('zone').add(gridZone);
  	Ext.getCmp('zone').doLayout();
  	
	dsZone.load({params:{start:0, limit:25}});
	
	/**
	 * Function for Deleting record(s)
	 * @param { Object } btn
	 */
	function deleteRecordBannerZone(btn) {
		if (btn=='yes')
		{
	    	var selections = gridZone.selModel.getSelections();
			for(j = 0; j < gridZone.selModel.getCount(); j++){
				var conn = new Ext.data.Connection();
				conn.on('beforerequest', function() {
					Ext.MessageBox.wait('delete clinic [' + selections[j].json.title + ']'); 
				});						
				conn.request({
					url: './admin/api_banner/deletezone',
					params:{guid: selections[j].json.guid},
					callback:function(options, success, response){
						if (success) {
							json = Ext.decode( response.responseText );
							if ( json.success ) {
								dsZone.reload(); 
								info( 'success', json.message );
							} else {
								Ext.Msg.alert( 'Failure', json.error );
							}
						} else {
							Ext.Msg.alert( 'Error', 'Failed to connect to the server.');
						}
					}
				});
				conn.on('requestcomplete', function() {
					Ext.MessageBox.hide();
				});						
			}
		}
	}

}, 10);
</script>